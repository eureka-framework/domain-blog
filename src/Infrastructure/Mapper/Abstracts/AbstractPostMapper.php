<?php

/*
 * Copyright (c) Romain Cottard
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

declare(strict_types=1);

namespace Eureka\Domain\Blog\Infrastructure\Mapper\Abstracts;

use Eureka\Component\Orm\AbstractMapper;
use Eureka\Domain\Blog\Entity\Post;
use Eureka\Domain\Blog\Infrastructure\Mapper\AuthorMapper;
use Eureka\Domain\Blog\Infrastructure\Mapper\CategoryMapper;
use Eureka\Domain\Blog\Infrastructure\Mapper\PostTagMapper;

/**
 * Abstract Post mapper class.
 *
 * /!\ AUTO GENERATED FILE. DO NOT EDIT THIS FILE.
 * You can add your specific code in child class: {{ class.child }}
 *
 * @author Eureka Orm Generator
 */
abstract class AbstractPostMapper extends AbstractMapper
{
    /**
     * Initialize mapper with proper values for mapped table.
     *
     * @return void
     */
    protected function initialize(): void
    {
        $this->setEntityClass(Post::class);
        $this->setTable('blog_post');

        $this->setFields([
            'blog_post_id',
            'blog_author_id',
            'blog_category_id',
            'blog_post_status',
            'blog_post_title',
            'blog_post_image',
            'blog_post_thumbnail',
            'blog_post_summary',
            'blog_post_article',
            'blog_post_date_create',
            'blog_post_date_update',
            'blog_post_date_publication'
        ]);

        $this->setPrimaryKeys([
            'blog_post_id'
        ]);

        $this->setNamesMap([
            'blog_post_id' => [
                'get'      => 'getId',
                'set'      => 'setId',
                'property' => 'id',
            ],
            'blog_author_id' => [
                'get'      => 'getBlogAuthorId',
                'set'      => 'setBlogAuthorId',
                'property' => 'blogAuthorId',
            ],
            'blog_category_id' => [
                'get'      => 'getBlogCategoryId',
                'set'      => 'setBlogCategoryId',
                'property' => 'blogCategoryId',
            ],
            'blog_post_status' => [
                'get'      => 'getStatus',
                'set'      => 'setStatus',
                'property' => 'status',
            ],
            'blog_post_title' => [
                'get'      => 'getTitle',
                'set'      => 'setTitle',
                'property' => 'title',
            ],
            'blog_post_image' => [
                'get'      => 'getImage',
                'set'      => 'setImage',
                'property' => 'image',
            ],
            'blog_post_thumbnail' => [
                'get'      => 'getThumbnail',
                'set'      => 'setThumbnail',
                'property' => 'thumbnail',
            ],
            'blog_post_summary' => [
                'get'      => 'getSummary',
                'set'      => 'setSummary',
                'property' => 'summary',
            ],
            'blog_post_article' => [
                'get'      => 'getArticle',
                'set'      => 'setArticle',
                'property' => 'article',
            ],
            'blog_post_date_create' => [
                'get'      => 'getDateCreate',
                'set'      => 'setDateCreate',
                'property' => 'dateCreate',
            ],
            'blog_post_date_update' => [
                'get'      => 'getDateUpdate',
                'set'      => 'setDateUpdate',
                'property' => 'dateUpdate',
            ],
            'blog_post_date_publication' => [
                'get'      => 'getDatePublication',
                'set'      => 'setDatePublication',
                'property' => 'datePublication',
            ],
        ]);

        $this->setValidatorConfig([
            'blog_post_id' => [
                'type'      => 'integer',
                'options'   => ['min_range' => 0, 'max_range' => 4294967295],
            ],
            'blog_author_id' => [
                'type'      => 'integer',
                'options'   => ['min_range' => 0, 'max_range' => 4294967295],
            ],
            'blog_category_id' => [
                'type'      => 'integer',
                'options'   => ['min_range' => 0, 'max_range' => 65535],
            ],
            'blog_post_status' => [
                'type'      => 'integer',
                'options'   => ['min_range' => -128, 'max_range' => 127],
            ],
            'blog_post_title' => [
                'type'      => 'string',
                'options'   => ['min_length' => 0, 'max_length' => 100],
            ],
            'blog_post_image' => [
                'type'      => 'string',
                'options'   => ['max_length' => 200],
            ],
            'blog_post_thumbnail' => [
                'type'      => 'string',
                'options'   => ['max_length' => 200],
            ],
            'blog_post_summary' => [
                'type'      => 'string',
                'options'   => ['min_length' => 0, 'max_length' => 65535],
            ],
            'blog_post_article' => [
                'type'      => 'string',
                'options'   => ['min_length' => 0, 'max_length' => 16777215],
            ],
            'blog_post_date_create' => [
                'type'      => 'datetime',
                'options'   => [],
            ],
            'blog_post_date_update' => [
                'type'      => 'datetime',
                'options'   => [],
            ],
            'blog_post_date_publication' => [
                'type'      => 'datetime',
                'options'   => [],
            ],
        ]);

        $this->setJoinConfigs([
            'Author' => [
                'mapper'   => AuthorMapper::class,
                'type'     => 'INNER',
                'relation' => 'one',
                'keys'     => ['blog_author_id' => true],
            ],
            'Category' => [
                'mapper'   => CategoryMapper::class,
                'type'     => 'LEFT',
                'relation' => 'one',
                'keys'     => ['blog_category_id' => true],
            ],
            'PostTags' => [
                'mapper'   => PostTagMapper::class,
                'type'     => 'LEFT',
                'relation' => 'many',
                'keys'     => ['blog_post_id' => true],
            ],
        ]);
    }
}
